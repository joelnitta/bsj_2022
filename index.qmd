---
format:
  revealjs:
    slide-level: 2
    bibliography:
      - references.yaml
      - references_other.yaml
    csl: ecology.csl
    reference-location: document
    css: styles.css
    slide-number: true
    self-contained: true
---

```{r}
#| label: setup
#| include: false
knitr::opts_chunk$set(echo = TRUE, cache = TRUE)
library(ftolr)
library(ggtree)
library(ggtext)
library(ggdark)
library(scico)
library(patchwork)
library(tidyverse)
library(ape)
library(fontawesome)
```

# Introduction {visibility="hidden"}

## The Open Fern Tree of Life:<br>常に最新の状態を保つ<br>全シダ植物系統樹に<br>向けて {background-image="images/background.png" background-size="contain" background-color="#191919"}

:::: {.columns}

::: {.column width="60%"}

:::: {.medium}
**Joel Nitta<sup>1</sup>**, Eric Schuettpelz<sup>2</sup>, Santiago Ram&iacute;rez-Barahona<sup>3</sup>, Wataru Iwasaki<sup>1</sup>
::::

:::: {.small}
1: 東大・大学院・新領域, 2: Smithsonian Institution, 3: Universidad Nacional Aut&oacute;noma de M&eacute;xico [https://joelnitta.github.io/shinka_2022](https://joelnitta.github.io/shinka_2022)
::::

:::

::: {.column width="40%"}
:::

::::

## 全生物の系統樹の構築：ダーウィン以来の大きな目的

:::: {.columns}

::: {.column width="50%" .medium}
![](images/darwin_tree.png){height="400"}  
Darwin (1837)
:::

::: {.column width="50%" .medium}
![](images/big_tree.png){height="400"}  
@Hinchliff2015
:::

::::

::: {.notes}
全生物の系統樹を構築することは、ダーウィン以来、生物学において大きな目的です。
:::

## GenBankのデータの増加によって、現実的になりつつある

<br>

::: {.r-stack}
![](images/genbank_growth.png){height="400"}
:::

::: {.medium}
@Gauthier2019
:::

::: {.notes}
そして、この大きな目的は近年、GenBankに含まれているシーケンスデータの著しい増加によって、現実的になりつつあります。
:::

## （自動的なパイプラインを使えば）

::::: {.columns}

:::: {.column width="65%"}
- pyPHLAWD [@Smith2019]
- superSMART [@Antonelli2016]
- superCRUNCH [@Portik2020]
::::

:::: {.column width="10%"}
::::

:::: {.column width="25%" .small}
![](images/supersmart.png){height="400"}
@Antonelli2016
::::

:::::

::: {.notes}
しかし、GenBankのデータの量はとても大きいので、うまく扱うのに自動的なパイプラインが必要になります。
:::

## 問題その１：性能とスケーラビリティのトレードオフ

- どの自動的なパイプラインでも、いくつかの**前提**や**近道**をしないといけない

- 一方で、手動でシーケンスを全部確認したらより正確な系統樹が得られるはずが、**大量のデータには無理**

::: {.r-stack}
![](images/balance.png){height="300"}
:::

::: {.notes}
ここで二つの問題が発生します。一つは、性能とスケーラビリティのトレードオフです。自動的なパイプラインはどうしてもあるデータに対する前提を持って、近道をすることがあるので、呉同定と言ったようなミスが見つかりにくいのです。

一方で、シーケンスを一つ一つマニュアルに確かめることができたら、より正確な系統樹が得られるはずですが、ビッグデータだとそのようなことは無理があります。
:::

## 問題その２：すぐに古くなってしまう

- GenBankのデータの著しい増加によって系統樹が**すぐに古くなってしまう**

::: {.r-stack}
![](images/time.png){height="300"}
:::

::: {.notes}
もう一つの問題は、データが日々GenBankに蓄積して行くので、一度作った系統樹はすぐに古くなってしまいます。
:::

## 本研究の試み：自動化とカスタマイズを両方取り入れる

本研究の目的：**シダ植物**の最も種数の多い、分類学的に高性能な**系統樹を自動的に作るシステムの開発**

::: {.r-stack}
![](images/conveyer.png){height="300"}
:::

::: {.notes}
そこで、本研究では、自動化とパイプラインのカスタマイズを両方取り入れることにしてみました。

本研究の目的は**シダ植物**の最も種数の多い、分類学的に高性能な**系統樹を自動的に作るシステムの開発**です。
:::

## なぜシダ？

多様で、生態学的に重要な役割を果たしている植物

被子植物と比べて、**調べやすい**：

- シダ植物：約12,000種、そのうち４−５割シーケンスあり
- 被子植物：約350,000種、２割シーケンスあり

::: {.r-stack}
![](images/ferns.png){height="300"}
:::

::: {.notes}
なぜシダ植物を選んだかと言いますと、シダ植物は陸上植物の中で被子植物に次いで２番目に大きな系統群で、様々な環境に生育し、生物多様性的な面から見ると非常に重要なグループです。
また、シダ植物は被子植物と比べて全体の種数が少ないため、比較的に調べやすい研究対象です。被子植物の約35万種に対して、約1万２千種しかいなくて、そのうちやく40から50パーセントはシーケンスデータが公開されているので、全体の系統樹を作るのに適した材料です。
:::

# 方法 

---

## GenBankのデータマイニング

### サンガー法データ
  - ７つの遺伝子
  - 約5,100種

### 次世代シーケンサーデータ
  - 79遺伝子
  - 約400種 

::: {.notes}	
入力データは２種類あります。一つはサンガー法遺伝子です。本研究にはシダ植物で最もよく使われてきた７つの遺伝子を使っています。これは現在全部でやく５０００種が含まれています。

もう一つのデータは全葉緑体ゲノム由来の遺伝子です。これはサンガー法のデータよりも遺伝子の数がずっと多いのですが、種の数は少ないです：７９遺伝子と約４００種です。

データは全部GenBankからダウンロードしました。
:::

## 種名の統一

- [World Ferns](https://www.worldplants.de/world-ferns/ferns-and-lycophytes-list) [@Hassler2022]をもとに新しい分類データベース「[pteridocat](https://github.com/fernphy/pteridocat)」を構築

- GenBankの種名を[taxastand](https://github.com/joelnitta/taxastand)\* Rパッケージによってpteridocatに統一する

::: {.medium}
```{r}
#| label: name-res-ex
#| echo: false

# Read in name resolution results
name_res <- readRDS("data/match_results_resolved_all.RDS")

# Get number of rows
nrow_res <-
name_res %>% 
  nrow() %>%
  scales::number(big.mark = ",")

# Isolate some example rows
name_res %>%
  filter(matched_status == "synonym") %>%
  select(query, matched_name, resolved_name) %>%
  mutate(
    across(everything(), ~nchar(.), .names = "{.col}_nchar"),
    total_nchar = rowSums(across(contains("_nchar"))),
    q_genus = str_split(query, " ") %>% map_chr(1)
    ) %>%
  filter(total_nchar < 70) %>%
  group_by(q_genus) %>%
  slice_min(order_by = total_nchar) %>%
  ungroup() %>%
  arrange(total_nchar) %>%
  slice(1:2) %>%
  arrange(query) %>%
  select(query, matched_name, resolved_name) %>%
  knitr::kable()
```

... (合計：`r nrow_res`列)
:::

::: aside
\*私が開発者。もし使い方についてご質問があれば、ご連絡お願いします。
:::

::: {.notes}	
GenBankに含まれているシダ植物の種名はもちろん、シダ植物の研究者が決めたわけではなく、古い名前やシノニムがたくさん含まれています。
この名前を治すために、標準の分類学的なデータベースに一致しました。
標準データベースは元々World Fernsというデータベースを元に、今回の研究に使えるように改造し、pteridocatと名付けました。
GenBankの種名をtaxastandという、私がこの作業を行うために開発したRパッケージによってpteridocatに統一して、シノニムを排除しました。
:::

## 自動的な種の呉同定の排除

- all-by-all BLAST [@Camacho2009]　をかける

- クエリー（種）が異なる科と一致した場合、呉同定の排除として排除する

::: {.small}
|species|accession|locus|query family| match family |
| ----- | ------- | --- | ------- | ----- |
Abacopteris_gymnopteridifrons | JF303974 | rbcL | Thelypteridaceae | Athyriaceae
Angiopteris_evecta | AY344778 | trnL-trnF | Marattiaceae | Ophioglossaceae
...
(合計：７０)
:::

::: {.notes}	
もう一つ、GenBankのデータを扱う上で気をかけなければないのは、種の呉同定です。  
:::

## 系統解析：バックボーン

- MAFFTによってシーケンスをアライン [@Katoh2002]

- IQ-TREE [@Nguyen2015]において最尤法によって系統樹を推定する

::: {.notes}	
系統解析は二段階で行いました。まずは、全葉緑体遺伝子をMAFFTによってアラインして、IQ-TREEで最尤法によって系統樹を推測しました。この系統樹は深い分岐点を含むので、バックボーンツリーと呼びます。
:::

## 系統解析：全体のツリー

- MAFFTによってシーケンスをアライン

- IQ-TREE [@Nguyen2015]において**葉緑体の系統樹を制約にして**最尤法によって系統樹を推定する

- treePL [@Smith2012]によって分岐年代推定を行う

::: {.notes}	
次には、サンガー法遺伝子を同じようにアラインメントを作って、系統解析を行いますが、一つだけ違うところは、IQ-TREEでは葉緑体の系統樹を制約として使います。こうすることによって、深い分岐点をはっきりと決めることができると同時に、種のサンプリングも最大にすることができます。
この全体の系統樹が得られたら、treePLによって分岐年代推定を行いました。
:::

# 結果

## バックボーンが綺麗に<br>決まる

:::: {.columns}

::: {.column width="50%"}
- 分岐点の93%が100%支持

- 議論のあった分岐点も綺麗に決まる
:::

::: {.column width="50%"}
![](images/backbone_tree_trans.png){.absolute top=0 right=0 height="700"}
:::

::::

::: {.notes}
まずは、f全葉緑体によるバックボーンツリーです。ここでは、チップを科で表しています。

予想していたように、バックボーンの支持根はとても高いです。番号が振っていない分岐点は全部１００パーセントです。

トポロジーは今までの葉緑体マーカーを使った系統樹とおおまかに一致しました。そして、いくつかその関係について議論があった深い分岐点は綺麗に決まりました（例えば、Aspleniineae）。
:::

## {background-image="images/cov_tree.png" background-size="contain"}

::: {.notes}
次は現在のFern Tree of Life、略してFTOLです。

現存していると思われる12万シダ植物のうち、半分近くの５千５百種が入っています。

これは今までの一番大きな系統樹と比べて約４０パーセントの増加になります。
:::

```{r}
#| label: make-bs-plot
#| echo: false
#| run: true
#| message: false
#| warning: false

phy <- ftolr::ft_tree(drop_og = TRUE)

# Make a dataframe (tibble) with node IDs (integers) and their corresponding
# bootstrap support values. The tibble has two columns: one called "node",
# the other can be named as we like (here, "bootstrap")
bs_tibble <- tibble(
  # hard-code node ID: internal nodes start after tip nodes,
  # and phy$node.label is in the same order as internal nodes
  node = seq_len(Nnode(phy)) + Ntip(phy),
  bootstrap = parse_number(phy$node.label))

# Use the ggtree::`%<+%` operator to map the bootstrap values onto the tree

bs_tree_plot <- ggtree(
    phy, layout = "fan", size = 0.25, color = "grey70") %<+% bs_tibble +
  geom_nodepoint(aes(color = bootstrap), size = 0.75) +
  scale_color_viridis_c(option = "C") +
  labs(color = "BS") +
  theme(
    panel.background = element_rect(fill = "grey10", colour = NA),
    plot.background = element_rect(fill = "grey10", colour = NA),
    legend.position = "none")

# export image to working dir, then edit in powerpoint. too hard to get
# sizes to work as desired in Rmarkdown
ggsave(
  plot = bs_tree_plot, file = "working/bs_tree_plot.png",
  width = 10, height = 10, units = "in")

# Also make distribution plot of node support values
support <- tibble(
  bs = parse_number(phy$node.label)) %>%
  filter(!is.na(bs))

support_counts <-
support %>%
  mutate(bin = cut_width(bs, width = 1, center = 0.5)) %>%
  group_by(bin) %>%
  summarize(
    count = n(),
    .groups = "drop"
  ) %>%
  mutate(
    bin_start = str_match(bin, "(\\d+)\\,") %>%
      magrittr::extract(,2) %>%
      parse_number()) %>%
  mutate(bin_start = bin_start / 100)

n_nodes <- nrow(support) %>% scales::number(big.mark = ",")

# Dark version
bs_histogram <- ggplot(support_counts, aes(x = bin_start, y = count, fill = bin_start)) +
  geom_col() +
  scale_x_continuous(labels = scales::percent) +
  scale_fill_viridis_c(option = "C", labels = scales::percent) +
  labs(
    x = "BS",
    y = "Count",
    fill = "BS"
  ) +
  dark_theme_gray(base_size = 24) +
  theme(
    plot.subtitle = element_markdown(),
    panel.background = element_rect(fill = "grey10", colour = NA),
    plot.background = element_rect(fill = "grey10", colour = NA),
    legend.background = element_rect(fill = "grey10", colour = NA),
    legend.position = "right")

ggsave(
  plot = bs_histogram, file = "working/bs_histogram.png")
```

## 分岐年代の<br>再評価

:::: {.columns}

::: {.column width="40%"}
- 化石の校正点51点（今までの**倍近く**）

- 多くの科の分岐年代を約１〜３千万年より古いと推定

- シダ植物は被子植物の「影」で進化したわけではない？
:::

::: {.column width="60%"}
![](images/stem_ages.png){.absolute top=0 left=400 height="700"}
:::

::::

::: {.notes}	
また、本研究の大きな発見は、シダ植物の種文化のタイミングです。今までの研究は分岐年代推定に２０個程度の化石を使ってきましたが、今回の研究では、化石の文献を再評価した結果、今までの倍の５０個の化石を使うことができました。

その結果、多くのシダ植物の科の分岐年代は今までの研究よりも約１千万から３千万くらい古いことが示唆されました。

２０００年代初期に最初の植物の分子年代推定の論文が出た時以来、現在のシダ植物が被子植物の後に多様化した、いわゆる「ferns diversified in the shadow of angiosperms」仮説がずっと主流になっていましたが、今回の大きな系統樹を含めて、化石とサンプルを増やすことによってシダ植物の多様化が被子植物と同じくらい、あるいはもっと古かったかもしれないという可能性が高くなってきています。

なお、この結果はtreePLという、割とシンプルな解析に基づいているので、今後はより高精度なツールでも調べる予定です。
:::

## [https://fernphy.github.io/](https://fernphy.github.io/)

- データのダウンロード

- 系統樹、データの探索

::: {.center}
![](images/website.png){height="400"}
:::

::: {.notes}
本研究において特に大事な点は、今回の結果を論文として発表するだけで終わりにするのではなく、どの研究者でも簡単に手に入れて、様々な研究に使えるようにしたいと思いました。

そのために、https://fernphy.github.io/でウエブサイトを用意して、ここからデータのダウンロード、系統樹の可視化、サンプルのデータの詳細を見ることなどができます。
:::

## R パッケージ **ftolr**

[https://github.com/fernphy/ftolr](https://github.com/fernphy/ftolr){preview-link="true"}

- 直接Rに系統樹やアラインメントを読み込む

- 外郡の有無などのオプション

```{r}
#| label: ftolr-demo
#| echo: true

library(ftolr)
ft_tree(drop_og = TRUE)
```

::: {.notes}
また、Rで簡単に使えるように、ftolrというRパッケージも用意しました。ftolrによってRに直接系統樹やアラインメントなどを読み込むことができます。また、外郡の有無など、様々なカスタマイズもできます。
:::

# まとめ

## 自動化とカスタマイズのバランスを取れた「ちょうど良い」アプローチ

- GenBankデータを自動的にダウンロードし、系統樹にする

- シダ植物専用の分類システムを導入

- 他の研究者が簡単に使える

- **他の生物でも同様にできる？**

## 今後の予定・目的

- **FTOLを完成させる**
   
   - 植物標本庫に収まっている標本のゲノムスキミング
    
- そのうち、**ファイロゲノミクス**に切り替わる

## 謝辞

- 日本学術振興会

- Smithsonian National Museum of Natural History Peter Buck Fellowship

- 東京大学大学院新領域創成科学研究科先端生命科学専攻岩崎研のメンバー

- A.E. White

- S. Fawcett

- M. Hassler

## hidden refs {visibility="hidden"}

[@Testo2016a]

## References {.scrollable}